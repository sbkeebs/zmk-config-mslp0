#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// --------------------------------------------------------------------------------------------------------------------------
// |   TAB   |    Q    |    W    |    F    |    P    |    B    |    J    |    L    |    U    |    Y    |   SEMI  |   BSPC   |
// |  LCTRL  |    A    |    R    |    S    |    T    |    G    |    M    |    N    |    E    |    I    |    O    |   APOS   |
// |  LSHFT  |    Z    |    X    |    C    |    D    |    V    |    K    |    H    |  COMMA  |   DOT   |   FSLH  |   GRAVE  |
// |         |  LCTRL  |  LGUI   |   LALT  |  1/RET  |         | 1/SPACE |         |  MINUS  |  EQUAL  |   BSLH  |   

// NO YES YES YES YES NO | YES NO YES YES YES NO

            bindings = <
    &kp TAB   &kp Q     &kp W     &kp F     &kp P     &kp B     &kp J     &kp L     &kp U     &kp Y     &kp SEMI  &kp BSPC 
    &kp LCTRL &kp A     &kp R     &kp S     &kp T     &kp G     &kp M     &kp N     &kp E     &kp I     &kp O     &kp APOS
    &kp LSHFT &kp Z     &kp X     &kp C     &kp D     &kp V     &kp K     &kp H     &kp COMMA &kp DOT   &kp FSLH  &kp BSLH 
    &none     &kp LCTRL &kp LGUI  &kp LALT  &lt 2 RET &none     &lt 3 SPACE &none   &kp MINUS &kp EQUAL &kp GRAVE  &none
            >;
        };

        1 {
            bindings = <
    &kp TAB   &kp Q     &kp W     &kp F     &kp P     &kp B     &kp J     &kp L     &kp U     &kp Y     &kp SEMI  &kp BSPC 
    &kp LGUI  &kp A     &kp R     &kp S     &kp T     &kp G     &kp M     &kp N     &kp E     &kp I     &kp O     &kp APOS
    &kp LSHFT &kp Z     &kp X     &kp C     &kp D     &kp V     &kp K     &kp H     &kp COMMA &kp DOT   &kp FSLH  &kp BSLH 
    &none     &kp LCTRL &kp LALT  &kp LGUI  &lt 2 RET &none     &lt 3 SPACE &none   &kp MINUS &kp EQUAL &kp GRAVE  &none

            >;
        };

        2 {
            bindings = <
    &kp ESC   &kp N1    &kp N2    &kp N3   &kp N4     &kp N5    &kp N6    &kp N7    &kp N8    &kp N9    &kp N0  &trans
    &trans    &kp C_PREV  &kp C_PP &kp C_NEXT &trans &trans &trans    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &trans
    &trans    &kp C_AC_BACK &kp C_PP &trans &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
    &none     &trans    &kp C_VOL_DN &kp C_VOL_UP &trans    &none     &mo 4    &none     &kp LBKT  &kp RBKT  &tog 1    &trans 
              >;
        };

        3 {
            bindings = <
    &kp ESC   &kp N1    &kp N2    &kp N3   &kp N4     &kp N5    &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &trans
    &trans    &kp C_PREV  &kp C_PP &kp C_NEXT &trans &trans &trans    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &trans
    &trans    &kp C_AC_BACK &kp C_PP &trans &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
    &none     &trans     &trans &trans &mo 4     &none     &trans    &none     &kp LBKT  &kp RBKT  &tog 1    &trans
              >;
        };

       4 {
           bindings = <
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans &trans &trans &trans   &trans    &bt BT_SEL 5
   &trans    &trans   &trans   &trans   &trans    &trans    &trans    &trans    &trans    &trans    &trans    &reset
   &trans    &trans   &trans    &trans   &trans    &trans    &trans    &trans    &trans    &trans    &trans    &bootloader
   &none     &trans    &out OUT_USB &out OUT_BLE &trans &none  &trans    &none   &ext_power EP_TOG  &trans    &trans    &none 
             >;
       };

    };
};

//        template {
//            bindings = <
//    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
//    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
//    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
//    &none     &trans    &trans    &trans    &trans    &none     &trans    &none     &trans    &trans    &trans    &none 
//              >;
//        };
